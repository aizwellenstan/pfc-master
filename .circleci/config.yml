version: 2.1

orbs:
  ruby: circleci/ruby@1.1.0
  node: circleci/node@2

jobs:
  build:
    working_directory: ~/projects/pfc-master
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          DB_HOST: 127.0.0.1
          RAILS_ENV: test
          BUNDLER_VERSION: 2.1.4
          TZ: "Japan"
      - image: circleci/mysql:5.6
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: root
          MYSQL_PASSWORD: password 

    steps:
      - checkout
      # - ruby/install-deps

      - run:
        name: wait for database
        command: dockerize -wait tcp://127.0.0.1:3306 -timeout 3m

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-{{ checksum "Gemfile.lock" }}
            - rails-demo-

      - run:
          name: setup bundler
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo gem install bundler

      - run:
          name: Which bundler?
          command: bundle -v

      - run:
          name: bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Store bundle cache
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: setup database
          command: |
            cp -v config/database.ci.yml config/database.yml

      - run: mysql_config --socket
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load

      - run:
          name: run rspec
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: tmp/screenshots
          destination: test-screenshots

#   test:
#     parallelism: 3
#     docker:
#       - image: circleci/ruby:2.5.1-node-browsers
#         environment:
#           DB_HOST: 127.0.0.1
#           RAILS_ENV: test
#           BUNDLER_VERSION: 2.1.4
#       - image: circleci/mysql:5.6
#         command: --default-authentication-plugin=mysql_native_password
#         environment:
#           MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
#           MYSQL_ROOT_HOST: '%'

#     steps:
#       - checkout
#       - ruby/install-deps

#       - run: mv config/database.yml.ci config/database.yml 
      
#       - run:
#           name: Wait for DB
#           command: dockerize -wait tcp://localhost:3306 -timeout 1m
      
#       - run: bundle exec rake db:create
#       - run: bundle exec rake db:schema:load
#       # Run rspec in parallel
#       - ruby/rspec-test
#       - ruby/rubocop-check

# workflows:
#   version: 2
#   build_and_test:
#     jobs:
#       - build
#       - test:
#           requires:
#             - build